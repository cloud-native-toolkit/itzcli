// Code generated by mockery v2.34.2. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"

	v1beta1 "github.com/tektoncd/pipeline/pkg/apis/pipeline/v1beta1"
)

// ParamReader is an autogenerated mock type for the ParamReader type
type ParamReader struct {
	mock.Mock
}

// Params provides a mock function with given fields:
func (_m *ParamReader) Params() ([]v1beta1.ParamSpec, error) {
	ret := _m.Called()

	var r0 []v1beta1.ParamSpec
	var r1 error
	if rf, ok := ret.Get(0).(func() ([]v1beta1.ParamSpec, error)); ok {
		return rf()
	}
	if rf, ok := ret.Get(0).(func() []v1beta1.ParamSpec); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]v1beta1.ParamSpec)
		}
	}

	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewParamReader creates a new instance of ParamReader. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewParamReader(t interface {
	mock.TestingT
	Cleanup(func())
}) *ParamReader {
	mock := &ParamReader{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
