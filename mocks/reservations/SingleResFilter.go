// Code generated by mockery v2.20.0. DO NOT EDIT.

package mocks

import (
	reservations "github.com/cloud-native-toolkit/itzcli/pkg/reservations"
	mock "github.com/stretchr/testify/mock"
)

// SingleResFilter is an autogenerated mock type for the SingleResFilter type
type SingleResFilter struct {
	mock.Mock
}

// Execute provides a mock function with given fields: _a0
func (_m *SingleResFilter) Execute(_a0 reservations.SingleTZReservation) bool {
	ret := _m.Called(_a0)

	var r0 bool
	if rf, ok := ret.Get(0).(func(reservations.SingleTZReservation) bool); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

type mockConstructorTestingTNewSingleResFilter interface {
	mock.TestingT
	Cleanup(func())
}

// NewSingleResFilter creates a new instance of SingleResFilter. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewSingleResFilter(t mockConstructorTestingTNewSingleResFilter) *SingleResFilter {
	mock := &SingleResFilter{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
