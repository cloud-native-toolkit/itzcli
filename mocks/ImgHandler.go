// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
	atkmod "github.ibm.com/skol/atkmod"

	pkg "github.ibm.com/skol/atkcli/pkg"
)

// ImgHandler is an autogenerated mock type for the ImgHandler type
type ImgHandler struct {
	mock.Mock
}

// Execute provides a mock function with given fields: svc, runCtx, runner
func (_m *ImgHandler) Execute(svc *pkg.Service, runCtx *atkmod.RunContext, runner *atkmod.CliModuleRunner) bool {
	ret := _m.Called(svc, runCtx, runner)

	var r0 bool
	if rf, ok := ret.Get(0).(func(*pkg.Service, *atkmod.RunContext, *atkmod.CliModuleRunner) bool); ok {
		r0 = rf(svc, runCtx, runner)
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

type mockConstructorTestingTNewImgHandler interface {
	mock.TestingT
	Cleanup(func())
}

// NewImgHandler creates a new instance of ImgHandler. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewImgHandler(t mockConstructorTestingTNewImgHandler) *ImgHandler {
	mock := &ImgHandler{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
