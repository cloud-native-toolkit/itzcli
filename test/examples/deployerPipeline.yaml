---
apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: cloud-pak-deployer
spec:
  params:
    - name: namespace
      type: string
      description: Namespace for Cloud Pak Deployer deployment
      default: "cloud-pak-deployer"
    - name: storage-class
      type: string
      description: RWX storage class needed for cp4d
      default: "ocs-storagecluster-cephfs"
    - name: ocp-client-version
      type: string
      description: Openshift client version
      default: "4.10"
    - name: cp4d-version
      type: string
      description: Cloud Pak for Data version
      default: "4.6.4"
    - name: ibm-entitlement-key
      type: string
      description: The IBM entitlement key with permissions for pulling cp4d images
      default: "false"

    - name: analyticsengine-state
      type: string
      description: |
        variable determining if analytics engine will be installed
        {
          "options": [
            {"text": "False","value": "removed", "default": "true"},
            {"text": "True","value": "installed"}
          ]
        }
      default: "removed"
    - name: analyticsengine-size
      type: string
      description: |
        variable determining analytics engine size
        {
          "options": [
            {"text": "Small","value": "small", "default": "true"},
            {"text": "Medium","value": "medium"},
            {"text": "Large","value": "large"}
          ]
        }
      default: "small"
    - name: bigsql-state
      type: string
      description: |
        variable determining if bigsql will be installed
        {
          "options": [
            {"text": "False","value": "removed", "default": "true"},
            {"text": "True","value": "installed"}
          ]
        }
      default: "removed"
    - name: ca-state
      type: string
      description: |
        variable determining if ca will be installed
        {
          "options": [
            {"text": "False","value": "removed", "default": "true"},
            {"text": "True","value": "installed"}
          ]
        }
      default: "removed"
    - name: ca-size
      type: string
      description: |
        variable determining ca size
        {
          "options": [
            {"text": "Small","value": "small", "default": "true"},
            {"text": "Medium","value": "medium"},
            {"text": "Large","value": "large"}
          ]
        }
      default: "small"
    - name: ca-instance
      type: string
      description: variable determining name of ca instance
      default: "ca-instance"
    - name: cde-state
      type: string
      description: |
        variable determining if cde will be installed
        {
          "options": [
            {"text": "False","value": "removed", "default": "true"},
            {"text": "True","value": "installed"}
          ]
        }
      default: "removed"
    - name: datagate-state
      type: string
      description: |
        variable determining if datagate will be installed
        {
          "options": [
            {"text": "False","value": "removed", "default": "true"},
            {"text": "True","value": "installed"}
          ]
        }
      default: "removed"
    - name: datastage-ent-plus-state
      type: string
      description: |
        variable determining if datastage enterprise plus will be installed
        {
          "options": [
            {"text": "False","value": "removed", "default": "true"},
            {"text": "True","value": "installed"}
          ]
        }
      default: "removed"
    - name: db2-state
      type: string
      description: |
        variable determining if db2 will be installed
        {
          "options": [
            {"text": "False","value": "removed", "default": "true"},
            {"text": "True","value": "installed"}
          ]
        }
      default: "removed"
    - name: db2-size
      type: string
      description: |
        variable determining db2 size
        {
          "options": [
            {"text": "Small","value": "small", "default": "true"},
            {"text": "Medium","value": "medium"},
            {"text": "Large","value": "large"}
          ]
        }
      default: "small"
    - name: db2wh-state
      type: string
      description: |
        variable determining if db2wh will be installed
        {
          "options": [
            {"text": "False","value": "removed", "default": "true"},
            {"text": "True","value": "installed"}
          ]
        }
      default: "removed"
    - name: dmc-state
      type: string
      description: |
        variable determining if dmc will be installed
        {
          "options": [
            {"text": "False","value": "removed", "default": "true"},
            {"text": "True","value": "installed"}
          ]
        }
      default: "removed"
    - name: dods-state
      type: string
      description: |
        variable determining if dods will be installed
        {
          "options": [
            {"text": "False","value": "removed", "default": "true"},
            {"text": "True","value": "installed"}
          ]
        }
      default: "removed"
    - name: dods-size
      type: string
      description: |
        variable determining dods size
        {
          "options": [
            {"text": "Small","value": "small", "default": "true"},
            {"text": "Medium","value": "medium"},
            {"text": "Large","value": "large"}
          ]
        }
      default: "small"
    - name: dp-state
      type: string
      description: |
        variable determining if dp will be installed
        {
          "options": [
            {"text": "False","value": "removed", "default": "true"},
            {"text": "True","value": "installed"}
          ]
        }
      default: "removed"
    - name: dp-size
      type: string
      description: |
        variable determining dp size
        {
          "options": [
            {"text": "Small","value": "small", "default": "true"},
            {"text": "Medium","value": "medium"},
            {"text": "Large","value": "large"}
          ]
        }
      default: "small"
    - name: factsheet-state
      type: string
      description: |
        variable determining if factsheet will be installed
        {
          "options": [
            {"text": "False","value": "removed", "default": "true"},
            {"text": "True","value": "installed"}
          ]
        }
      default: "removed"
    - name: factsheet-size
      type: string
      description: |
        variable determining factsheet size
        {
          "options": [
            {"text": "Small","value": "small", "default": "true"},
            {"text": "Medium","value": "medium"},
            {"text": "Large","value": "large"}
          ]
        }
      default: "small"
    - name: dv-state
      type: string
      description: |
        variable determining if dv will be installed
        {
          "options": [
            {"text": "False","value": "removed", "default": "true"},
            {"text": "True","value": "installed"}
          ]
        }
      default: "removed"
    - name: dv-size
      type: string
      description: |
        variable determining dv size
        {
          "options": [
            {"text": "Small","value": "small", "default": "true"},
            {"text": "Medium","value": "medium"},
            {"text": "Large","value": "large"}
          ]
        }
      default: "small"
    - name: dv-instance
      type: string
      description: variable determining name of dv instance
      default: "data-virtualization"
    - name: hadoop-state
      type: string
      description: |
        variable determining if hadoop will be installed
        {
          "options": [
            {"text": "False","value": "removed", "default": "true"},
            {"text": "True","value": "installed"}
          ]
        }
      default: "removed"
    - name: hadoop-size
      type: string
      description: |
        variable determining hadoop size
        {
          "options": [
            {"text": "Small","value": "small", "default": "true"},
            {"text": "Medium","value": "medium"},
            {"text": "Large","value": "large"}
          ]
        }
      default: "small"
    - name: mdm-state
      type: string
      description: |
        variable determining if mdm will be installed
        {
          "options": [
            {"text": "False","value": "removed", "default": "true"},
            {"text": "True","value": "installed"}
          ]
        }
      default: "removed"
    - name: mdm-size
      type: string
      description: |
        variable determining mdm size
        {
          "options": [
            {"text": "Small","value": "small", "default": "true"},
            {"text": "Medium","value": "medium"},
            {"text": "Large","value": "large"}
          ]
        }
      default: "small"
    - name: mdm-wkc-enabled
      type: string
      description: |
        variable determining if wkc is enabled for mdm
        {
          "options": [
            {"text": "True","value": "true", "default": "true"},
            {"text": "False","value": "false"}
          ]
        }
      default: "true"
    - name: openpages-state
      type: string
      description: |
        variable determining if openpages will be installed
        {
          "options": [
            {"text": "False","value": "removed", "default": "true"},
            {"text": "True","value": "installed"}
          ]
        }
      default: "removed"
    - name: openpages-size
      type: string
      description: |
        variable determining openpages size
        {
          "options": [
            {"text": "Extra Small","value": "xsmall", "default": "true"},
            {"text": "Small","value": "small"},
            {"text": "Medium","value": "medium"},
            {"text": "Large","value": "large"}
          ]
        }
      default: "xsmall"
    - name: openpages-instance
      type: string
      description: variable determining name of openpages instance
      default: "openpages-instance"
    - name: rstudio-state
      type: string
      description: |
        variable determining if rstudio will be installed
        {
          "options": [
            {"text": "False","value": "removed", "default": "true"},
            {"text": "True","value": "installed"}
          ]
        }
      default: "removed"
    - name: rstudio-size
      type: string
      description: |
        variable determining rstudio size
        {
          "options": [
            {"text": "Small","value": "small", "default": "true"},
            {"text": "Medium","value": "medium"},
            {"text": "Large","value": "large"}
          ]
        }
      default: "small"
    - name: spss-state
      type: string
      description: |
        variable determining if spss will be installed
        {
          "options": [
            {"text": "False","value": "removed", "default": "true"},
            {"text": "True","value": "installed"}
          ]
        }
      default: "removed"
    - name: voice-gateway-state
      type: string
      description: |
        variable determining if voice gateway will be installed
        {
          "options": [
            {"text": "False","value": "removed", "default": "true"},
            {"text": "True","value": "installed"}
          ]
        }
      default: "removed"
    - name: voice-gateway-replicas
      type: string
      description: variable determining number of voice gateway replicas
      default: "1"
    - name: watson-assistant-state
      type: string
      description: |
        variable determining if watson assistant will be installed
        {
          "options": [
            {"text": "False","value": "removed", "default": "true"},
            {"text": "True","value": "installed"}
          ]
        }
      default: "removed"
    - name: watson-assistant-size
      type: string
      description: |
        variable determining watson assistant size
        {
          "options": [
            {"text": "Small","value": "small", "default": "true"},
            {"text": "Medium","value": "medium"},
            {"text": "Large","value": "large"}
          ]
        }
      default: "small"
    - name: watson-discovery-state
      type: string
      description: |
        variable determining if watson discovery will be installed
        {
          "options": [
            {"text": "False","value": "removed", "default": "true"},
            {"text": "True","value": "installed"}
          ]
        }
      default: "removed"
    - name: watson-ks-state
      type: string
      description: |
        variable determining if watson ks will be installed
        {
          "options": [
            {"text": "False","value": "removed", "default": "true"},
            {"text": "True","value": "installed"}
          ]
        }
      default: "removed"
    - name: watson-ks-size
      type: string
      description: |
        variable determining watson ks size
        {
          "options": [
            {"text": "Small","value": "small", "default": "true"},
            {"text": "Medium","value": "medium"},
            {"text": "Large","value": "large"}
          ]
        }
      default: "small"
    - name: watson-openscale-state
      type: string
      description: |
        variable determining if watson openscale will be installed
        {
          "options": [
            {"text": "False","value": "removed", "default": "true"},
            {"text": "True","value": "installed"}
          ]
        }
      default: "removed"
    - name: watson-openscale-size
      type: string
      description: |
        variable determining watson openscale size
        {
          "options": [
            {"text": "Small","value": "small", "default": "true"},
            {"text": "Medium","value": "medium"},
            {"text": "Large","value": "large"}
          ]
        }
      default: "small"
    - name: watson-speech-state
      type: string
      description: |
        variable determining if watson speech will be installed
        {
          "options": [
            {"text": "False","value": "removed", "default": "true"},
            {"text": "True","value": "installed"}
          ]
        }
      default: "removed"
    - name: watson-speech-stt-size
      type: string
      description: |
        variable determining watson speech stt size
        {
          "options": [
            {"text": "Extra Small","value": "xsmall", "default": "true"},
            {"text": "Small","value": "small"},
            {"text": "Medium","value": "medium"},
            {"text": "Large","value": "large"}
          ]
        }
      default: "xsmall"
    - name: watson-speech-tts-size
      type: string
      description: |
        variable determining watson speech tts size
        {
          "options": [
            {"text": "Extra Small","value": "xsmall", "default": "true"},
            {"text": "Small","value": "small"},
            {"text": "Medium","value": "medium"},
            {"text": "Large","value": "large"}
          ]
        }
      default: "xsmall"
    - name: wkc-size
      type: string
      description: |
        size of wkc configuration
        {
          "options": [
            {"text": "Small","value": "small", "default": "true"},
            {"text": "Medium","value": "medium"},
            {"text": "Large","value": "large"}
          ]
        }
      default: "small"
    - name: wkc-state
      type: string
      description: |
        variable determining if wkc will be installed
        {
          "options": [
            {"text": "False","value": "removed", "default": "true"},
            {"text": "True","value": "installed"}
          ]
        }
      default: "removed"
    - name: wkc-options-core-only
      type: string
      description: |
        install option for wkc to install core only
        {
          "options": [
            {"text": "True","value": "True", "default": "true"},
            {"text": "False","value": "False"}
          ]
        }
      default: "True"
    - name: wkc-options-knowledge-graph
      type: string
      description: |
        install option for wkc to install knowledge graph
        {
          "options": [
            {"text": "False","value": "False", "default": "true"},
            {"text": "True","value": "True"}
          ]
        }
      default: "False"
    - name: wkc-options-enable-data-quality
      type: string
      description: |
        install option for wkc to enable data quality
        {
          "options": [
            {"text": "False","value": "False", "default": "true"},
            {"text": "True","value": "True"}
          ]
        }
      default: "False"
    - name: wkc-options-enable-fact-sheet
      type: string
      description: |
        install option for wkc to enable fact sheet
        {
          "options": [
            {"text": "False","value": "False", "default": "true"},
            {"text": "True","value": "True"}
          ]
        }
      default: "False"
    - name: wkc-options-enable-manta
      type: string
      description: |
        install option for wkc to enable manta
        {
          "options": [
            {"text": "False","value": "False", "default": "true"},
            {"text": "True","value": "True"}
          ]
        }
      default: "False"
    - name: planning-analytics-state
      type: string
      description: |
        variable determining if planning analytics will be installed
        {
          "options": [
            {"text": "False","value": "removed", "default": "true"},
            {"text": "True","value": "installed"}
          ]
        }
      default: "removed"
    - name: wml-state
      type: string
      description: |
        variable determining if wml will be installed
        {
          "options": [
            {"text": "False","value": "removed", "default": "true"},
            {"text": "True","value": "installed"}
          ]
        }
      default: "removed"
    - name: wml-size
      type: string
      description: |
        variable determining wml size
        {
          "options": [
            {"text": "Small","value": "small", "default": "true"},
            {"text": "Medium","value": "medium"},
            {"text": "Large","value": "large"}
          ]
        }
      default: "small"
    - name: wml-accelerator-state
      type: string
      description: |
        variable determining if wml accelerator will be installed
        {
          "options": [
            {"text": "False","value": "removed", "default": "true"},
            {"text": "True","value": "installed"}
          ]
        }
      default: "removed"
    - name: wml-accelerator-size
      type: string
      description: |
        variable determining wml accelerator size
        {
          "options": [
            {"text": "Small","value": "small", "default": "true"},
            {"text": "Medium","value": "medium"},
            {"text": "Large","value": "large"}
          ]
        }
      default: "small"
    - name: wml-accelerator-replicas
      type: string
      description: variable determining number of wml accelerator replicas
      default: "1"
    - name: wsl-state
      type: string
      description: |
        variable determining if wsl will be installed
        {
          "options": [
            {"text": "False","value": "removed", "default": "true"},
            {"text": "True","value": "installed"}
          ]
        }
      default: "removed"
    - name: ws-pipelines-state
      type: string
      description: |
        variable determining if ws pipelines will be installed
        {
          "options": [
            {"text": "False","value": "removed", "default": "true"},
            {"text": "True","value": "installed" }
          ]
        }
      default: "removed"
  tasks:
    - name: add-namespace
      taskRef:
        kind: Task
        name: ibm-pak
      params:
        # - name: VERSION
        #   value: $(params.ocp-client-version)
        - name: SCRIPT
          value: |
            oc apply -f - <<EOF 
            apiVersion: v1
            kind: Namespace
            metadata:
              creationTimestamp: null
              name: $(params.namespace)
            EOF
    - name: add-sa
      taskRef:
        kind: Task
        name: ibm-pak
      runAfter:
        - add-namespace
      params:
        # - name: VERSION
        #   value: $(params.ocp-client-version)
        - name: SCRIPT
          value: |
            oc apply -f - <<EOF 
            apiVersion: v1
            kind: ServiceAccount
            metadata:
              name: cloud-pak-deployer-sa
              namespace: $(params.namespace)
            EOF
    - name: add-sa-permissions
      taskRef:
        kind: Task
        name: ibm-pak
      runAfter:
        - add-sa
      params:
        # - name: VERSION
        #   value: $(params.ocp-client-version)
        - name: SCRIPT
          value: |
            oc apply -f - <<EOF 
            apiVersion: rbac.authorization.k8s.io/v1
            kind: RoleBinding
            metadata:
              name: system:openshift:scc:privileged
              namespace: $(params.namespace)
            roleRef:
              apiGroup: rbac.authorization.k8s.io
              kind: ClusterRole
              name: system:openshift:scc:privileged
            subjects:
            - kind: ServiceAccount
              name: cloud-pak-deployer-sa
              namespace: $(params.namespace)
            EOF
    - name: bind-sa-permissions
      taskRef:
        kind: Task
        name: ibm-pak
      runAfter:
        - add-sa-permissions
      params:
        # - name: VERSION
        #   value: $(params.ocp-client-version)
        - name: SCRIPT
          value: |
            oc apply -f - <<EOF 
            apiVersion: rbac.authorization.k8s.io/v1
            kind: ClusterRoleBinding
            metadata:
              name: cloud-pak-deployer-cluster-admin
            roleRef:
              apiGroup: rbac.authorization.k8s.io
              kind: ClusterRole
              name: cluster-admin
            subjects:
            - kind: ServiceAccount
              name: cloud-pak-deployer-sa
              namespace: $(params.namespace)
            EOF
    - name: create-pvc
      taskRef:
        kind: Task
        name: ibm-pak
      runAfter:
        - bind-sa-permissions
      params:
        # - name: VERSION
        #   value: $(params.ocp-client-version)
        - name: SCRIPT
          value: |
            oc apply -f - <<EOF
            apiVersion: v1 
            kind: PersistentVolumeClaim
            metadata:
              name: cloud-pak-deployer-status
              namespace: $(params.namespace)
            spec:
              accessModes:
              - ReadWriteMany
              storageClassName: $(params.storage-class)
              resources:
                requests:
                  storage: 10Gi
            EOF
    - name: get-ibm-entitlement-key
      when:
        - input: "$(params.ibm-entitlement-key)"
          operator: in
          values: ["false"]
      params:
        - name: KEY_ID
          value: 968d7819-f2c5-7b67-c420-3c6bfd51521e
        - name: SECRETS_MANAGER_ENDPOINT_URL
          value: >-
            https://afa20521-cd75-4864-843f-e59fd0ffd49d.us-south.secrets-manager.appdomain.cloud
      taskRef:
        kind: Task
        name: ibmcloud-secrets-manager-get
      runAfter:
        - create-pvc
    - name: set-retrieved-entitlement-key
      taskRef:
        kind: Task
        name: ibm-pak
      runAfter:
        - get-ibm-entitlement-key
      params:
        # - name: VERSION
        #   value: $(params.ocp-client-version)
        - name: SCRIPT
          value: |
            oc apply -f - <<EOF
            apiVersion: v1
            kind: Secret
            metadata:
              name: cloud-pak-entitlement-key
              namespace: $(params.namespace)
            type: Opaque
            stringData:
              cp-entitlement-key: |
                $(tasks.get-ibm-entitlement-key.results.secret-value)
            EOF
    - name: configure-cloud-paks-services-1
      runAfter:
        - set-retrieved-entitlement-key
      taskRef:
        kind: Task
        name: ibm-pak
      params:
        # - name: VERSION
        #   value: $(params.ocp-client-version)
        - name: SCRIPT
          value: |
            oc apply -f - <<EOF
            apiVersion: v1
            kind: ConfigMap
            metadata:
              name: cloud-pak-deployer-config
              namespace: $(params.namespace)
            data:
              cpd-config.yaml: |
                global_config:
                  environment_name: demo
                  cloud_platform: existing-ocp
                  confirm_destroy: False

                openshift:
                - name: cpd-demo
                  ocp_version: '$(params.ocp-client-version)'
                  cluster_name: cpd-demo
                  domain_name: example.com
                  openshift_storage:
                  - storage_name: auto-storage
                    storage_type: ocs

                cp4d:
                - project: cpd
                  openshift_cluster_name: cpd-demo
                  cp4d_version: $(params.cp4d-version) 
                  sequential_install: True
                  accept_licenses: True
                  cartridges:
                  - name: cp-foundation
                    license_service:
                      state: disabled
                      threads_per_core: 2
                  - name: lite

                  - name: analyticsengine 
                    size: $(params.analyticsengine-size) 
                    state: $(params.analyticsengine-state)

                  - name: bigsql
                    state: $(params.bigsql-state)

                  - name: ca
                    size: $(params.ca-size)
                    instances:
                    - name: $(params.ca-instance)
                      metastore_ref: ca-metastore
                    state: $(params.ca-state)

                  - name: cde
                    state: $(params.cde-state)

                  - name: datagate
                    state: $(params.datagate-state)

                  - name: datastage-ent-plus
                    state: $(params.datastage-ent-plus-state)

                  - name: db2
                    size: $(params.db2-size)
                    instances:
                    - name: ca-metastore
                      metadata_size_gb: 20
                      data_size_gb: 20
                      backup_size_gb: 20  
                      transactionlog_size_gb: 20
                    state: $(params.db2-state)

                  - name: db2wh
                    state: $(params.db2wh-state)

                  - name: dmc
                    state: $(params.dmc-state)

                  - name: dods
                    size: $(params.dods-size)
                    state: $(params.dods-state)

                  - name: dp
                    size: $(params.dp-size)
                    state: $(params.dp-state)

                  - name: dv
                    size: $(params.dv-size)
                    instances:
                    - name: $(params.dv-instance)
                    state: $(params.dv-state)

                  - name: factsheet
                    size: $(params.factsheet-size)
                    state: $(params.factsheet-state)

                  - name: hadoop
                    size: $(params.hadoop-size)
                    state: $(params.hadoop-state)

                  - name: mdm
                    size: $(params.mdm-size)
                    wkc_enabled: $(params.mdm-wkc-enabled)
                    state: $(params.mdm-state)

                  - name: openpages
                    state: $(params.openpages-state)
                    instances:
                    - name: $(params.openpages-instance)
                      size: $(params.openpages-size)

                  - name: planning-analytics
                    state: $(params.planning-analytics-state)

                  - name: rstudio
                    size: $(params.rstudio-size)
                    state: $(params.rstudio-state)

                  - name: spss
                    state: $(params.spss-state)

                  - name: voice-gateway
                    replicas: $(params.voice-gateway-replicas)
                    state: $(params.voice-gateway-state)

                  - name: watson-assistant
                    size: $(params.watson-assistant-size)
                    state: $(params.watson-assistant-state)

                  - name: watson-discovery
                    state: $(params.watson-discovery-state)

                  - name: watson-ks
                    size: $(params.watson-ks-size)
                    state: $(params.watson-ks-state)

                  - name: watson-openscale
                    size: $(params.watson-openscale-size)
                    state: $(params.watson-openscale-state)

                  - name: watson-speech
                    stt_size: $(params.watson-speech-stt-size)
                    tts_size: $(params.watson-speech-tts-size)
                    state: $(params.watson-speech-state)

                  - name: wkc
                    size: $(params.wkc-size)
                    state: $(params.wkc-state)
                    installation_options:
                      install_wkc_core_only: $(params.wkc-options-core-only)
                      enableKnowledgeGraph: $(params.wkc-options-knowledge-graph)
                      enableDataQuality: $(params.wkc-options-enable-data-quality)
                      enableFactSheet: $(params.wkc-options-enable-fact-sheet)
                      enableMANTA: $(params.wkc-options-enable-manta)

                  - name: wml
                    size: $(params.wml-size)
                    state: $(params.wml-state)

                  - name: wml-accelerator
                    replicas: $(params.wml-accelerator-replicas)
                    size: $(params.wml-accelerator-size)
                    state: $(params.wml-accelerator-state)

                  - name: wsl
                    state: $(params.wsl-state)

                  - name: ws-pipelines
                    state: $(params.ws-pipelines-state)
            EOF
    - name: delete-previous-job-1
      taskRef:
        kind: Task
        name: ibm-pak
      runAfter:
        - configure-cloud-paks-services-1
      params:
        # - name: VERSION
        #   value: $(params.ocp-client-version)
        - name: SCRIPT
          value: |
            oc delete job cloud-pak-deployer -n $(params.namespace) --ignore-not-found
    - name: run-the-deployer-1
      taskRef:
        kind: Task
        name: ibm-pak
      runAfter:
        - delete-previous-job-1
      params:
        # - name: VERSION
        #   value: $(params.ocp-client-version)
        - name: SCRIPT
          value: |
            oc apply -f - <<EOF
            apiVersion: batch/v1
            kind: Job
            metadata:
              labels:
                app: cloud-pak-deployer
              name: cloud-pak-deployer
              namespace: $(params.namespace)
            spec:
              parallelism: 1
              completions: 1
              backoffLimit: 0
              template:
                metadata:
                  name: cloud-pak-deployer
                  labels:
                    app: cloud-pak-deployer
                spec:
                  containers:
                  - name: cloud-pak-deployer
                    image: quay.io/cloud-pak-deployer/cloud-pak-deployer:latest
                    imagePullPolicy: Always
                    terminationMessagePath: /dev/termination-log
                    terminationMessagePolicy: File
                    env:
                    - name: CONFIG_DIR
                      value: /Data/cpd-config
                    - name: STATUS_DIR
                      value: /Data/cpd-status
                    - name: CP_ENTITLEMENT_KEY
                      valueFrom:
                        secretKeyRef:
                          key: cp-entitlement-key
                          name: cloud-pak-entitlement-key
                    volumeMounts:
                    - name: config-volume
                      mountPath: /Data/cpd-config/config
                    - name: status-volume
                      mountPath: /Data/cpd-status
                    command: ["/bin/sh","-xc"]
                    args: 
                      - /cloud-pak-deployer/cp-deploy.sh env apply -v
                  restartPolicy: Never
                  securityContext:
                    runAsUser: 0
                  serviceAccountName: cloud-pak-deployer-sa
                  volumes:
                  - name: config-volume
                    configMap:
                      name: cloud-pak-deployer-config
                  - name: status-volume
                    persistentVolumeClaim:
                      claimName: cloud-pak-deployer-status
            EOF
    - name: wait-till-job-complete-1
      timeout: 6h0m0s
      taskRef:
        kind: Task
        name: ibm-pak
      runAfter:
        - run-the-deployer-1
      params:
        # - name: VERSION
        #   value: $(params.ocp-client-version)
        - name: SCRIPT
          value: |
            while true
            do
              is_complete=$(oc get -n $(params.namespace) job/cloud-pak-deployer -o yaml | yq '.status.conditions.[] | select(.type == "Complete") | contains({"status": "'True'"})')
              if [[ $is_complete != "true" ]]; then
                echo "Waiting for job to be Complete."
              else
                echo "Cloud Pak Deployer job is Complete."
                break
              fi
              sleep 10
            done
    - name: set-provided-entitlement-key
      taskRef:
        kind: Task
        name: ibm-pak
      when:
        - input: "$(params.ibm-entitlement-key)"
          operator: notin
          values: ["false"]
      runAfter:
        - create-pvc
      params:
        # - name: VERSION
        #   value: $(params.ocp-client-version)
        - name: SCRIPT
          value: |
            oc apply -f - <<EOF
            apiVersion: v1
            kind: Secret
            metadata:
              name: cloud-pak-entitlement-key
              namespace: $(params.namespace)
            type: Opaque
            stringData:
              cp-entitlement-key: |
                $(params.ibm-entitlement-key)
            EOF
    - name: configure-cloud-paks-services-2
      runAfter:
        - set-provided-entitlement-key
      when:
        - input: "$(params.ibm-entitlement-key)"
          operator: notin
          values: ["false"]
      taskRef:
        kind: Task
        name: ibm-pak
      params:
        # - name: VERSION
        #   value: $(params.ocp-client-version)
        - name: SCRIPT
          value: |
            oc apply -f - <<EOF
            apiVersion: v1
            kind: ConfigMap
            metadata:
              name: cloud-pak-deployer-config
              namespace: $(params.namespace)
            data:
              cpd-config.yaml: |
                global_config:
                  environment_name: demo
                  cloud_platform: existing-ocp
                  confirm_destroy: False

                openshift:
                - name: cpd-demo
                  ocp_version: '$(params.ocp-client-version)'
                  cluster_name: cpd-demo
                  domain_name: example.com
                  openshift_storage:
                  - storage_name: auto-storage
                    storage_type: ocs

                cp4d:
                - project: cpd
                  openshift_cluster_name: cpd-demo
                  cp4d_version: $(params.cp4d-version) 
                  sequential_install: True
                  accept_licenses: True
                  cartridges:
                  - name: cp-foundation
                    license_service:
                      state: disabled
                      threads_per_core: 2
                  - name: lite

                  - name: analyticsengine 
                    size: $(params.analyticsengine-size) 
                    state: $(params.analyticsengine-state)

                  - name: bigsql
                    state: $(params.bigsql-state)

                  - name: ca
                    size: $(params.ca-size)
                    instances:
                    - name: $(params.ca-instance)
                      metastore_ref: ca-metastore
                    state: $(params.ca-state)

                  - name: cde
                    state: $(params.cde-state)

                  - name: datagate
                    state: $(params.datagate-state)

                  - name: datastage-ent-plus
                    state: $(params.datastage-ent-plus-state)

                  - name: db2
                    size: $(params.db2-size)
                    instances:
                    - name: ca-metastore
                      metadata_size_gb: 20
                      data_size_gb: 20
                      backup_size_gb: 20  
                      transactionlog_size_gb: 20
                    state: $(params.db2-state)

                  - name: db2wh
                    state: $(params.db2wh-state)

                  - name: dmc
                    state: $(params.dmc-state)

                  - name: dods
                    size: $(params.dods-size)
                    state: $(params.dods-state)

                  - name: dp
                    size: $(params.dp-size)
                    state: $(params.dp-state)

                  - name: dv
                    size: $(params.dv-size)
                    instances:
                    - name: $(params.dv-instance)
                    state: $(params.dv-state)

                  - name: factsheet
                    size: $(params.factsheet-size)
                    state: $(params.factsheet-state)

                  - name: hadoop
                    size: $(params.hadoop-size)
                    state: $(params.hadoop-state)

                  - name: mdm
                    size: $(params.mdm-size)
                    wkc_enabled: $(params.mdm-wkc-enabled)
                    state: $(params.mdm-state)

                  - name: openpages
                    state: $(params.openpages-state)
                    instances:
                    - name: $(params.openpages-instance)
                      size: $(params.openpages-size)

                  - name: planning-analytics
                    state: $(params.planning-analytics-state)

                  - name: rstudio
                    size: $(params.rstudio-size)
                    state: $(params.rstudio-state)

                  - name: spss
                    state: $(params.spss-state)

                  - name: voice-gateway
                    replicas: $(params.voice-gateway-replicas)
                    state: $(params.voice-gateway-state)

                  - name: watson-assistant
                    size: $(params.watson-assistant-size)
                    state: $(params.watson-assistant-state)

                  - name: watson-discovery
                    state: $(params.watson-discovery-state)

                  - name: watson-ks
                    size: $(params.watson-ks-size)
                    state: $(params.watson-ks-state)

                  - name: watson-openscale
                    size: $(params.watson-openscale-size)
                    state: $(params.watson-openscale-state)

                  - name: watson-speech
                    stt_size: $(params.watson-speech-stt-size)
                    tts_size: $(params.watson-speech-tts-size)
                    state: $(params.watson-speech-state)

                  - name: wkc
                    size: $(params.wkc-size)
                    state: $(params.wkc-state)
                    installation_options:
                      install_wkc_core_only: $(params.wkc-options-core-only)
                      enableKnowledgeGraph: $(params.wkc-options-knowledge-graph)
                      enableDataQuality: $(params.wkc-options-enable-data-quality)
                      enableFactSheet: $(params.wkc-options-enable-fact-sheet)
                      enableMANTA: $(params.wkc-options-enable-manta)

                  - name: wml
                    size: $(params.wml-size)
                    state: $(params.wml-state)

                  - name: wml-accelerator
                    replicas: $(params.wml-accelerator-replicas)
                    size: $(params.wml-accelerator-size)
                    state: $(params.wml-accelerator-state)

                  - name: wsl
                    state: $(params.wsl-state)

                  - name: ws-pipelines
                    state: $(params.ws-pipelines-state)
            EOF
    - name: delete-previous-job-2
      when:
        - input: "$(params.ibm-entitlement-key)"
          operator: notin
          values: ["false"]
      taskRef:
        kind: Task
        name: ibm-pak
      runAfter:
        - configure-cloud-paks-services-2
      params:
        # - name: VERSION
        #   value: $(params.ocp-client-version)
        - name: SCRIPT
          value: |
            oc delete job cloud-pak-deployer -n $(params.namespace) --ignore-not-found
    - name: run-the-deployer-2
      when:
        - input: "$(params.ibm-entitlement-key)"
          operator: notin
          values: ["false"]
      taskRef:
        kind: Task
        name: ibm-pak
      runAfter:
        - delete-previous-job-2
      params:
        # - name: VERSION
        #   value: $(params.ocp-client-version)
        - name: SCRIPT
          value: |
            oc apply -f - <<EOF
            apiVersion: batch/v1
            kind: Job
            metadata:
              labels:
                app: cloud-pak-deployer
              name: cloud-pak-deployer
              namespace: $(params.namespace)
            spec:
              parallelism: 1
              completions: 1
              backoffLimit: 0
              template:
                metadata:
                  name: cloud-pak-deployer
                  labels:
                    app: cloud-pak-deployer
                spec:
                  containers:
                  - name: cloud-pak-deployer
                    image: quay.io/cloud-pak-deployer/cloud-pak-deployer:latest
                    imagePullPolicy: Always
                    terminationMessagePath: /dev/termination-log
                    terminationMessagePolicy: File
                    env:
                    - name: CONFIG_DIR
                      value: /Data/cpd-config
                    - name: STATUS_DIR
                      value: /Data/cpd-status
                    - name: CP_ENTITLEMENT_KEY
                      valueFrom:
                        secretKeyRef:
                          key: cp-entitlement-key
                          name: cloud-pak-entitlement-key
                    volumeMounts:
                    - name: config-volume
                      mountPath: /Data/cpd-config/config
                    - name: status-volume
                      mountPath: /Data/cpd-status
                    command: ["/bin/sh","-xc"]
                    args: 
                      - /cloud-pak-deployer/cp-deploy.sh env apply -v
                  restartPolicy: Never
                  securityContext:
                    runAsUser: 0
                  serviceAccountName: cloud-pak-deployer-sa
                  volumes:
                  - name: config-volume
                    configMap:
                      name: cloud-pak-deployer-config
                  - name: status-volume
                    persistentVolumeClaim:
                      claimName: cloud-pak-deployer-status
            EOF
    - name: wait-till-job-complete-2
      when:
        - input: "$(params.ibm-entitlement-key)"
          operator: notin
          values: ["false"]
      timeout: 6h0m0s
      taskRef:
        kind: Task
        name: ibm-pak
      runAfter:
        - run-the-deployer-2
      params:
        # - name: VERSION
        #   value: $(params.ocp-client-version)
        - name: SCRIPT
          value: |
            while true
            do
              is_complete=$(oc get -n $(params.namespace) job/cloud-pak-deployer -o yaml | yq '.status.conditions.[] | select(.type == "Complete") | contains({"status": "'True'"})')
              if [[ $is_complete != "true" ]]; then
                echo "Waiting for job to be Complete."
              else
                echo "Cloud Pak Deployer job is Complete."
                break
              fi
              sleep 10
            done
