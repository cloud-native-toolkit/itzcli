diff --git a/cmd/workspace.go b/cmd/workspace.go
index b762e16..2238244 100644
--- a/cmd/workspace.go
+++ b/cmd/workspace.go
@@ -8,6 +8,7 @@ import (
 	"github.com/spf13/viper"
 	"github.com/cloud-native-toolkit/atkmod"
 	"github.com/cloud-native-toolkit/itzcli/pkg"
+	"strings"
 )
 
 // workspaceCmd represents the workspace command
@@ -41,9 +42,16 @@ var workspaceCmd = &cobra.Command{
 		}
 		if len(serviceConfig.LocalDir) > 0 {
 			wsImg.Volumes = map[string]string{
-				serviceConfig.LocalDir: "/workspace",
+				serviceConfig.LocalDir: serviceConfig.RemoteDir,
 			}
 		}
+		for _, v := range serviceConfig.Volumes {
+			if wsImg.Volumes == nil {
+				wsImg.Volumes = make(map[string]string)
+			}
+			vmap := strings.Split(v, ":")
+			wsImg.Volumes[vmap[0]] = vmap[1]
+		}
 		services := []pkg.Service{*wsImg}
 		ctx := &atkmod.RunContext{
 			Out: reservationCmd.OutOrStdout(),
@@ -61,6 +69,7 @@ var workspaceCmd = &cobra.Command{
 func options(config *mapstructure.DecoderConfig) {
 	config.ErrorUnused = false
 	config.ErrorUnset = false
+	config.IgnoreUntaggedFields = true
 }
 
 func init() {
diff --git a/pkg/executils.go b/pkg/executils.go
index c44e3d7..9d9fc05 100644
--- a/pkg/executils.go
+++ b/pkg/executils.go
@@ -23,13 +23,15 @@ type PortMap map[string]string
 type Envvars map[string]string
 
 type ServiceConfig struct {
-	Name      string `yaml:"name"`
-	Local     bool   `yaml:"local"`
-	Image     string `yaml:"image"`
-	LocalDir  string `yaml:"localdir"`
-	MountOpts string `yaml:"mountopts"`
-	URL       string `yaml:"url,omitempty"`
-	Type      string `yaml:"type,omitempty"`
+	Name      string   `yaml:"name"`
+	Local     bool     `yaml:"local"`
+	Image     string   `yaml:"image"`
+	LocalDir  string   `yaml:"localdir,omitempty"`
+	MountOpts string   `yaml:"mountopts,omitempty"`
+	URL       string   `yaml:"url,omitempty"`
+	Type      string   `yaml:"type,omitempty"`
+	RemoteDir string   `yaml:"remotedir,omitempty"`
+	Volumes   []string `yaml:"volumes,omitempty"`
 }
 
 // Service is a background service that is really a container that run
