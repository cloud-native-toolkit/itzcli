// Code generated by mockery v2.34.2. DO NOT EDIT.

package mocks

import (
	io "io"

	solutions "github.com/cloud-native-toolkit/itzcli/pkg/solutions"
	mock "github.com/stretchr/testify/mock"
)

// SolutionWriter is an autogenerated mock type for the SolutionWriter type
type SolutionWriter struct {
	mock.Mock
}

// Write provides a mock function with given fields: w, s
func (_m *SolutionWriter) Write(w io.Writer, s *solutions.Solution) error {
	ret := _m.Called(w, s)

	var r0 error
	if rf, ok := ret.Get(0).(func(io.Writer, *solutions.Solution) error); ok {
		r0 = rf(w, s)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// WriteMany provides a mock function with given fields: w, ss
func (_m *SolutionWriter) WriteMany(w io.Writer, ss []solutions.Solution) error {
	ret := _m.Called(w, ss)

	var r0 error
	if rf, ok := ret.Get(0).(func(io.Writer, []solutions.Solution) error); ok {
		r0 = rf(w, ss)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewSolutionWriter creates a new instance of SolutionWriter. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewSolutionWriter(t interface {
	mock.TestingT
	Cleanup(func())
}) *SolutionWriter {
	mock := &SolutionWriter{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
